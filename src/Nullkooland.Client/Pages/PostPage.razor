@page "/posts/{Year:int}/{Id}"
@inject PostPageViewModel ViewModel

<style>
.post-header {
    height: 50vh; width: 100%;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

.header-title-bar {
    background-color: rgba(255, 255, 255, 0.5); /* Black w/opacity/see-through */
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    width: 100%;
}
</style>

<div Class="ma-0 pa-4">
    @if (ViewModel.IsLoading)
    {
        <MudPaper Elevation="3" Style="overflow: hidden;">
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="50vh"/>
            <div class="d-flex flex-column pa-4">

                <MudSkeleton Width="30%" Height="60px;"/>
                <MudDivider Class="my-6"/>

                <MudSkeleton Width="60%"/>
                <MudSkeleton Width="60%"/>
                <MudSkeleton Width="60%"/>
                <MudSkeleton Width="100%"/>

                <div class="d-flex flex-row align-self-end px-2">
                    <MudSkeleton Width="60px" Height="40px" Class="ml-2"/>
                    <MudSkeleton Width="120px" Height="40px" Class="ml-3"/>
                </div>
            </div>
        </MudPaper>
    }
    else
    {
        @if (ViewModel.Post != null)
        {
            <MudPaper Elevation="3" Style="overflow: hidden;">
                <div class="post-header d-flex flex-row align-end"
                     style="background-image: url(@ViewModel.Post.HeaderImagePath);">

                    <div class="header-title-bar d-flex flex-wrap align-center pa-1 md-elevation-2">
                        <MudIcon Icon=@Icons.Filled.DateRange Size="Size.Small" Class="ml-2"/>
                        <MudText Class="ml-2 mr-auto">
                            @ViewModel.Post.Date.ToString("dddd yyyy-MM-dd")
                        </MudText>

                        <MudIconButton Class="mr-1" Link="/tags"
                                       Icon=@Icons.Filled.Style Size="Size.Small"/>
                        @foreach (string tag in ViewModel.Post.Tags)
                        {
                            <MudChip Label="true" Size="Size.Small" Class="ml-1" Link="@($"tags/{tag}")">
                                @tag
                            </MudChip>
                        }
                    </div>
                </div>

                <div class="pa-6">
                    <MarkdownSection Text="@ViewModel.Content"
                                     BaseUrl="@ViewModel.Post.Url"/>
                </div>

                <MudDivider DividerType="DividerType.Middle"/>

                <div class="d-flex flex-row justify-center align-center py-6">
                    <MudIcon Icon="@CustomIcons.ClawScratch" Color="Color.Tertiary" Size="Size.Large"/>
                    <MudText Typo="Typo.h4" Color="Color.Tertiary" Class="mx-4"
                             Style="font-family: Roboto Slab; font-style: italic;">
                        EOF
                    </MudText>
                </div>
            </MudPaper>
        }
        else
        {
            <MediaBlock Source="images/dont_you_ever_stop.png"/>
        }
    }
</div>


@code {

    [Parameter]
    public int Year { get; set; }

    [Parameter]
    public string Id { get; set; }

    private bool _isHeaderOverlayShown;

    protected override async Task OnParametersSetAsync()
    {
        await ViewModel.LoadMarkdownAsync(Id);
    }

}